Symfony 5.4.8 (env: dev, debug: true) #StandWithUkraine https://sf.to/ukraine

Available commands:
  about                              Display information about the current project
  completion                         Dump the shell completion script
  help                               Display help for a command
  list                               List commands
  tinker                             
 app
  app:activate                       Activate the app in the folder with the given name
  app:deactivate                     Deactivate the app in the folder with the given name
  app:install                        Installs the app with the given name
  app:refresh                        [app:update] Refreshes the installed Apps
  app:uninstall                      Uninstalls the app
  app:url-change:resolve             Resolve changes in the app url and how the app system should handle it.
  app:validate                       Check manifests for errors
 assets
  assets:install                     
 bundle
  bundle:dump                        [administration:dump:plugins|administration:dump:bundles] Creates a json file with the configuration for each active Shopware bundle.
 cache
  cache:clear                        Clear the cache
  cache:pool:clear                   Clear cache pools
  cache:pool:delete                  Delete an item from a cache pool
  cache:pool:list                    List available cache pools
  cache:pool:prune                   Prune cache pools
  cache:warmup                       Warm up an empty cache
 changelog
  changelog:change                   Returns all changes made in a specific / unreleased version.
  changelog:check                    Check the validation of a given changelog file. This command will check all files in "changelog/_unreleased" folder, if users don't specify a changelog file.
  changelog:create                   Create a changelog markdown file in `/changelog/_unreleased`
  changelog:release                  Creating or updating the final changelog for a new release
 config
  config:dump-reference              Dump the default configuration for an extension
 customer
  customer:delete-unused-guests      Delete unused guest customers without orders
 dal
  dal:create:entities                
  dal:create:hydrators               
  dal:create:schema                  
  dal:refresh:index                  Refreshes the shop indices
  dal:validate                       
 database
  database:clean-personal-data       
  database:create-migration          
  database:migrate                   
  database:migrate-destructive       
  database:refresh-migration         
 debug
  debug:autowiring                   List classes/interfaces you can use for autowiring
  debug:business-events              
  debug:config                       Dump the current configuration for an extension
  debug:container                    Display current services for an application
  debug:dotenv                       Lists all dotenv files with variables and values
  debug:event-dispatcher             Display configured listeners for an application
  debug:messenger                    List messages you can dispatch using the message buses
  debug:messenger:dispatch-sleep     Dispatches a sleep message, which just sleeps. Can be used to debug the messenger
  debug:router                       Display current routes for an application
  debug:translation                  Display translation messages information
  debug:twig                         Show a list of twig functions, filters, globals and tests
  debug:validator                    Display validation constraints for classes
 enqueue
  enqueue:consume                    [enq:c] A client's worker that processes messages. By default it connects to default queue. It select an appropriate message processor based on a message headers
  enqueue:produce                    Sends an event to the topic
  enqueue:routes                     [debug:enqueue:routes] A command lists all registered routes.
  enqueue:setup-broker               [enq:sb] Setup broker. Configure the broker, creates queues, topics and so on.
  enqueue:transport:consume          A worker that consumes message from a broker. To use this broker you have to explicitly set a queue to consume from and a message processor service
 es
  es:create:alias                    Dev command to create alias immediately
  es:index                           Reindex all entities to elasticsearch
  es:index:cleanup                   Admin command to remove old and unused indices
  es:reset                           Resets Elasticsearch indexing
  es:status                          Shows current status of Elasticsearch
  es:test:analyzer                   Allows to test an elasticsearch analyzer
 feature
  feature:dump                       [administration:dump:features] Creating json file with feature config for js testing and hot reloading capabilities.
 framework
  framework:demodata                 
  framework:dump:class:schema        
  framework:schema                   Dumps the api definition to a json file.
 frosh
  frosh:extend:template              Generates the template extension for you
  frosh:make:definition              Generates an entity
  frosh:make:migration               
  frosh:make:plugin                  
  frosh:schema:diff                  Diffs the database structure with the known definitions
 http
  http:cache:warm:up                 
 import
  import:entity                      
 import-export
  import-export:delete-expired       Deletes all expired import/export files
 lint
  lint:container                     Ensure that arguments injected into services match type declarations
  lint:twig                          Lint a Twig template and outputs encountered errors
  lint:xliff                         Lint an XLIFF file and outputs encountered errors
  lint:yaml                          Lint a YAML file and outputs encountered errors
 media
  media:delete-unused                Deletes all media files that are never used
  media:generate-media-types         Generates the media type for all media entities
  media:generate-thumbnails          Generates the thumbnails for media entities
 messenger
  messenger:consume                  Consume messages
  messenger:setup-transports         Prepare the required infrastructure for the transport
  messenger:stop-workers             Stop workers after their current message
 number-range
  number-range:migrate               Migrates the current states of the number ranges from the given storage to the given storage. Note that if this command runs during load on the system it may be possible that the same number is generated twice.
 plugin
  plugin:activate                    Activates given plugins
  plugin:create                      Creates a plugin skeleton
  plugin:deactivate                  Deactivates given plugins
  plugin:install                     Installs given plugins
  plugin:list                        Show a list of available plugins.
  plugin:refresh                     Refreshes the plugins list in the storage from the file system
  plugin:uninstall                   Uninstalls given plugins
  plugin:update                      Updates given plugins
  plugin:zip-import                  Import plugin zip file.
 product-export
  product-export:generate            
 router
  router:match                       Help debug routes by simulating a path info match
 s3
  s3:set-visibility                  Sets visibility for all objects in corresponding bucket of S3 storage.
 sales-channel
  sales-channel:create               
  sales-channel:create:storefront    
  sales-channel:list                 
  sales-channel:maintenance:disable  
  sales-channel:maintenance:enable   
  sales-channel:update:domain        Changes the domain of all sales channels
 scheduled-task
  scheduled-task:register            Registers all available scheduled tasks.
  scheduled-task:run                 Worker that runs scheduled task.
 secrets
  secrets:decrypt-to-local           Decrypt all secrets and stores them in the local vault
  secrets:encrypt-from-local         Encrypt all local secrets to the vault
  secrets:generate-keys              Generate new encryption keys
  secrets:list                       List all secrets
  secrets:remove                     Remove a secret from the vault
  secrets:set                        Set a secret in the vault
 server
  server:dump                        Start a dump server that collects and displays dumps in a single place
  server:log                         Start a log server that displays logs in real time
 sitemap
  sitemap:generate                   Generates sitemaps for a given shop (or all active ones)
 skeletonplugin
  skeletonplugin:skeletoncommand     
 snippets
  snippets:validate                  
 state-machine
  state-machine:dump                 Dump a workflow
 store
  store:download                     
  store:login                        
 system
  system:config:get                  
  system:config:set                  
  system:configure-shop              
  system:generate-app-secret         
  system:generate-jwt-secret         
  system:install                     
  system:setup                       
  system:update:finish               
  system:update:prepare              
 theme
  theme:change                       
  theme:compile                      
  theme:create                       Creates a theme skeleton
  theme:dump                         
  theme:prepare-icons                
  theme:refresh                      
 translation
  translation:extract                [translation:update] Extract missing translations keys from code to translation files.
  translation:pull                   Pull translations from a given provider.
  translation:push                   Push translations to a given provider.
 user
  user:change-password               
  user:create                        
